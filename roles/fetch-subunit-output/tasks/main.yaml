# NOTE(mordred) Check for the failing file in the .stestr directory instead of
# just the directory. An stestr run that fails due to python parsing errors
# will leave a directory but with no test results, which will result in an
# error in the subunit generation phase.
- name: Check for stestr directory
  stat:
    path: "{{ zuul_work_dir }}/.stestr/failing"
  register: stestr_stat

- name: Generate stestr subunit file
  shell:
    cmd: ".tox/{{ tox_envlist }}/bin/stestr last --subunit > ./testrepository.subunit"
    chdir: "{{ zuul_work_dir }}"
  when:
    - tox_envlist is defined
    - stestr_stat.stat.exists

- name: Generate stestr subunit file
  shell:
    cmd: "stestr last --subunit > ./testrepository.subunit"
    chdir: "{{ zuul_work_dir }}"
  when:
    - tox_envlist is not defined
    - stestr_stat.stat.exists

- name: Check for testr directory
  stat:
    path: "{{ zuul_work_dir }}/.testrepository"
  register: testr_stat
  when: not stestr_stat.stat.exists

- name: Generate testrepository.subunit file
  shell:
    cmd: ".tox/{{ tox_envlist }}/bin/testr last --subunit > ./testrepository.subunit"
    chdir: "{{ zuul_work_dir }}"
  when:
    - tox_envlist is defined
    - not stestr_stat.stat.exists
    - testr_stat.stat.exists

- name: Generate testrepository.subunit file
  shell:
    cmd: "testr last --subunit > ./testrepository.subunit"
    chdir: "{{ zuul_work_dir }}"
  when:
    - tox_envlist is not defined
    - not stestr_stat.stat.exists
    - testr_stat.stat.exists

- name: Process and fetch subunit results
  include: process.yaml
  when: stestr_stat.stat.exists or testr_stat.stat.exists
